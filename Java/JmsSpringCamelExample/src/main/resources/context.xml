<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xsi:schemaLocation="http://activemq.apache.org/schema/core
http://activemq.apache.org/schema/core/activemq-core-5.5.0.xsd
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-2.5.xsd">

	<!-- 1. set the ActiveMQ connection factory the broker url can be embedded 
		(see vm prefix) Here in Ocado we use tcp as a transport layer -->
	<bean id="connectionFactory" class="org.apache.activemq.spring.ActiveMQConnectionFactory">
		<property name="brokerURL" value="vm://localhost:61616" />
	</bean>

	<!-- 2. set up the destination -->
	<bean id="queue" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="my.queue" />
	</bean>

	<!-- 3. Wire the template -->
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name = "connectionFactory" ref="connectionFactory" />
		<property name = "defaultDestinationName" value = "my.queue"/>
	</bean>
	
	<!-- 4. Create a bean that will listen and process the messages -->
	<bean id="MyHandler" class="it.ciscosistem.examples.JmsSpringCamel.MyHandler"/>
	    
	<!-- 5. Wire a message listener -->
	<jms:listener-container connection-factory="connectionFactory">
	    <jms:listener destination="my.queue" ref="MyHandler" method="handle"/>
	</jms:listener-container>
	
</beans>